/*

using System;

class Program
{
	static void Main()
	{

		Console.WriteLine("Write a number:");
		int num = int.Parse(Console.ReadLine());

		string firstbinarynum = Convert.ToString(num, 2);
		Console.WriteLine(firstbinarynum);


	

		int bit3 = (num >> 3) & 1;
		int bit24 = (num >> 24) & 1;
		num = num & (~(1 << 24)) | (bit3 << 24); num = num & (~(1 << 3)) | (bit24 << 3);

		int bit4 = (num >> 4) & 1;
		int bit25 = (num >> 25) & 1;
		num = num & (~(1 << 25)) | (bit4 << 25); num = num & (~(1 << 4)) | (bit25 << 4);

		int bit5 = (num >> 5) & 1;
		int bit26 = (num >> 25) & 1;
		num = num & (~(1 << 26)) | (bit4 << 26); num = num & (~(1 << 5)) | (bit26 << 5);


        Console.WriteLine("After Conversion");
        string binarynum = Convert.ToString(num, 2);
        Console.WriteLine(binarynum);
        Console.WriteLine(num);
	}
}

*/

/*

using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Write a number:");
        int n = int.Parse(Console.ReadLine());
        bool primeOrNot = true;

        for (int i = 2; i < Math.Sqrt((double)n); i++) 
        {
            if( (n % i) == 0)
            {
                primeOrNot = false;
                Console.WriteLine(primeOrNot + " " + n + "  is not a prime number it is divisible by: " + i);
            }
        }

        if(primeOrNot == true)
        {
            Console.WriteLine(primeOrNot + " " + n + " is a prime number");
        }
    }
}

*/



/*

using System;

class Program
{
	static void Main()
	{
		Console.WriteLine("Write a number:");
        int n = int.Parse(Console.ReadLine());

		Console.WriteLine("Write either 1 or 0:");
		int v = int.Parse(Console.ReadLine());

		Console.WriteLine("Write a position:");
		int p = int.Parse(Console.ReadLine());

        if(p==1)
        {
            if(n % 2 == 0 && v == 1)
            {
                n += 1;
                Console.WriteLine("From " + (n-1) + " n is now changed to " + n);
            }
			
            else if (n % 2 == 1 && v == 0)
			{
				n -= 1;
                Console.WriteLine("From" + (n + 1) + " n is now changed to " + n);
			}
            else
            {
                Console.WriteLine("Nothing has been changed");
            }
        }

       
            


		if (p != 1)
		{
            if ( ( ( n >> (p-1) ) % 2 )  == 0 && v == 1)
			{
                double x = (double) n + Math.Pow( (double) 2 , (double) p ) / 2  ;
                Console.WriteLine("From " + n + " n is now changed to " + x);
                n = (int)x;
			}

			else if (((n >> (p - 1)) % 2) == 1 && v == 0)
			{
				double x = (double)n - Math.Pow((double)2, (double)p) / 2;
				Console.WriteLine("From " + n + " n is now changed to " + x);
				n = (int)x;
			}
            else
            {
                Console.WriteLine("Nothing has been changed p != 1");
            }
		}



	}

}

*/

/*
using System;

class Program
{
	static void Main()
	{
		Console.WriteLine("Write a number:");
		int n = int.Parse(Console.ReadLine());

		Console.WriteLine("Write a position:");
		int p = int.Parse(Console.ReadLine());

		Console.WriteLine(n >> (p - 1));
		int movedNumber = n >> (p - 1);
        if  (movedNumber % 2 == 0 )
        {
            Console.WriteLine("False the integer " + n + " does not have 1 in position " + p);
        }
        else
        {
            Console.WriteLine("True the integer " + n + " do have 1 in position" + p);
        }
	}

}

*/

/*
using System;

class Program
{
	static void Main()
	{
		Console.WriteLine("Write a number:");
		int n = int.Parse(Console.ReadLine());

		Console.WriteLine("Write a position:");
		int p = int.Parse(Console.ReadLine());

        Console.WriteLine( n >> (p - 1) ) ;
        int movedNumber = n >> (p - 1);
        Console.WriteLine(("Binary digit at position" + p + "is: " + (movedNumber % 2)));		
	}

}

*/

/*

using System;

class Program
{
	static void Main()
	{

        int year;
        do
        {
            
            Console.WriteLine("Write a four digit number:");
            year = int.Parse(Console.ReadLine());
        }
        while (year < 999 || year > 9999);
            
        int d = year % 10;
        int c = (year / 10) % 10;
        int b = (year / 100) % 10; 
        int a = (year / 1000) % 10;

        int sumOfDigits = a + b + c + d;
        Console.WriteLine(sumOfDigits);
        Console.WriteLine(d +""+ c +"" + b+"" + a);
        Console.WriteLine(d + "" + b + "" + c + "" + a);
        Console.WriteLine(a + "" + c + "" + b + "" + d);
	}

}

*/

/*

using System;

class Program
{
	static void Main()
	{

		Console.WriteLine("Write X");
		double X = double.Parse(Console.ReadLine());
		Console.WriteLine("Write Y");
		double Y = double.Parse(Console.ReadLine());
		double R = 5;

        Console.WriteLine("Distance from center:" + Math.Sqrt(X * X + Y * Y));
        bool insideCircle = Math.Sqrt(X * X + Y * Y) < R;

		if (Math.Sqrt(X * X + Y * Y) < R)
		{
			Console.WriteLine("Point is in circle");
		}
		else
		{
			Console.WriteLine("Point is outside circle");
		}

        bool outOfRectangle = (X < -1 || X > 5 || Y < 1 || Y > 5);
            if (outOfRectangle)
        {
            Console.WriteLine("Out of rectangle");
        }
        else
		{
			Console.WriteLine("Inside rectangle");
		}

        if (outOfRectangle && insideCircle )
        {
            Console.WriteLine("Success!!!!!!     Inside Circle and outside of rectangle");
        }
        else
        {
            Console.WriteLine("Point is NOT!!!! :  Inside Circle and Out of rectangle");
        }
	}

}

*/

/*

using System;

class Program
{
	static void Main()
	{

		Console.WriteLine("Write X");
        double X = double.Parse(Console.ReadLine());
        Console.WriteLine("Write Y");
        double Y = double.Parse(Console.ReadLine());
        double R = 5;

        Console.WriteLine(Math.Sqrt(X * X + Y * Y));

        if ( Math.Sqrt(X * X + Y * Y) < R ) 
        {
            Console.WriteLine("Point is in circle");
        }
		else 
        {
            Console.WriteLine("Point is outside circle");
        }
	}
}

*/

/*

using System;

class Program
{
	static void Main()
	{
		
        Console.WriteLine("Write the mans weight on earth");
        double weightOnEarth = double.Parse(Console.ReadLine());
        double weightOnMoon = weightOnEarth * 0.17;

		Console.WriteLine("weight on earth = " + weightOnEarth +"kg");
		Console.WriteLine("weight on moon = " + weightOnMoon +"kg");
	}
}

*/

/*
 
  
using System;

class Program
{
	static void Main()
	{
		double height = double.Parse(Console.ReadLine());
		double width = double.Parse(Console.ReadLine());
		


		double perimeter = 2 * (height + width);
        double area = (height * width);

		Console.WriteLine("perimeter = " + perimeter);
        Console.WriteLine("area = " + area);
	}
}

*/


/*

using System;

class Program
{
	static void Main()
	{
        double height = double.Parse(Console.ReadLine());
        double side1 = double.Parse(Console.ReadLine());
        double side2 = double.Parse(Console.ReadLine());

      
       double area = height *  (side1 + side2) / 2;
        Console.WriteLine(area);
	}
}

*/


/*

using System;

class Program
{
	static void Main()
	{
		// Write full binary string for 100.
		Console.WriteLine(GetIntBinaryString(8));

		// Write full binary string for 100000.
		Console.WriteLine(GetIntBinaryString(7));
	}

	static string GetIntBinaryString(int n)
	{
		char[] b = new char[32];
		int pos = 31;
		int i = 0;

		while (i < 32)
		{
			if ((n & (1 << i)) != 0) // if the i'th bit in n from right to left is one then put 1 into b at index pos = 31 - i
			{
				b[pos] = '1';
			}
			else
			{
				b[pos] = '0';
			}
			pos--;
			i++;
		}
		return new string(b);
	}
}

*/

/*

using System;

class MainClass
{
	static void Main()
	{
		Console.Write("Please enter a number: ");
		int number = int.Parse(Console.ReadLine());
		int thirdDigit = number >> 2;
        Console.WriteLine( Convert.ToString(number, 2) );

		if (thirdDigit % 2 == 0)
		{
			Console.WriteLine("The third bit IS not 1!");
		}
		else
		{
			Console.WriteLine("The third bit is 1.");
		}
	}
}

*/


/*

using System;

class MainClass
{
	static void Main()
	{
		Console.Write("Please enter a number: ");
		int number = int.Parse(Console.ReadLine());
		int thirdDigit = (number / 100) % 10;
		if (thirdDigit == 7)
		{
			Console.WriteLine("The third digits IS seven!");
		}
		else
		{
			Console.WriteLine("The third digit IS NOT seven.");
		}
	}
}

*/

/*
 

Write a Boolean expression that checks whether a given integer is divisible by both 5 and 7, without a remainder.



using System;

namespace ChapterThreeSolutions
{
	class MainClass
	{
		public static void Main(string[] args)
		{

			Console.WriteLine("Input a number:");
			int intTemp = Convert.ToInt32(Console.ReadLine());

            bool A = ( (intTemp % 5 == 0) && (intTemp % 7 == 0) );
            Console.WriteLine(A);

            // Same thing written in one line
            Console.WriteLine( ( (intTemp % 5 == 0) && (intTemp % 7 == 0) ) );
		}
	}
}

*/

/*

// Write an expression that checks whether an integer is odd or even.



using System;

namespace ChapterThreeSolutions
{
    class MainClass
    {
        public static void Main(string[] args)
        {
			

            Console.WriteLine("Input a number:");
            int intTemp = Convert.ToInt32(Console.ReadLine());

			if (intTemp % 2 == 0)
			{
				Console.WriteLine("Your input is even");
			}
			else
			{
				Console.WriteLine("Your input is odd");
			}
		}
    }
}
*/
